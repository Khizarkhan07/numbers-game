{"version":3,"sources":["utils/index.tsx","context/gameContext.tsx","styles.tsx","components/Button.tsx","components/StatusBanner.tsx","components/Slice.tsx","Pages/Home.tsx","App.tsx","index.tsx"],"names":["numberState","level","numbers","i","push","storeLevel","localStorage","setItem","JSON","stringify","initialState","gameState","status","previousLevel","GameContext","createContext","state","dispatch","gameReducer","action","type","result","j","nums","Math","floor","random","length","generateRandom","slice","guess","map","String","compareAnswer","payload","split","newState","GameProvider","children","useReducer","Provider","value","Circle","styled","ul","ButtonWrapper","div","InputWrapper","SliceWrapper","li","props","Button","icon","text","color","disabled","callback","styles","background","width","style","onClick","className","StatusBanner","title","subTitle","Slice","Home","useContext","useState","stateValue","setStateValue","console","log","useEffect","getItem","handleChange","useCallback","e","target","name","checkAnswer","handleNextLevel","handleReset","handleStart","setTimeout","handleNewGame","Buttons","useMemo","inputFields","htmlFor","placeholder","onChange","checkButton","nextButton","circleSlices","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4442238c.chunk.js","sourcesContent":["import {gameStateType} from \"../types\";\r\n\r\nexport const generateRandom = (state: gameStateType) => {\r\n    var nums = state.numbers,\r\n        ranNums ,\r\n        j = 0;\r\n        j = Math.floor(Math.random() * (nums.length));\r\n        ranNums = nums[j];\r\n    return [(ranNums as number), j];\r\n}\r\n\r\nexport const compareAnswer = (state : gameStateType, guess: string[])=> {\r\n    const gameState = state.gameState.map(String)\r\n    let result = false;\r\n    if(JSON.stringify(gameState)==JSON.stringify(guess))\r\n        result = true;\r\n\r\n    if(result) {\r\n        return 'WIN'\r\n    }\r\n    else  {\r\n        return 'LOST'\r\n    }\r\n}\r\n\r\n\r\nexport const numberState = (level : number) => {\r\n    let numbers = []\r\n    for (let i = 1 ; i<= level ; i++){\r\n        numbers.push(i);\r\n    }\r\n    return numbers\r\n}\r\n\r\nexport const storeLevel = (level: number) => {\r\n    localStorage.setItem('level', JSON.stringify(level));\r\n}","import React, {createContext, ReactNode, useContext, useReducer} from \"react\";\r\nimport { gameStateType, actionType} from \"../types\";\r\nimport {compareAnswer, generateRandom, numberState, storeLevel} from \"../utils\";\r\n\r\nconst START = 'START'\r\nconst RESET = 'RESET'\r\nconst CHECK = 'CHECK'\r\nconst NEXT_LEVEL = 'NEXT_LEVEL'\r\nconst SET_LEVEL = 'SET_LEVEL'\r\nconst NEW_GAME = 'NEW_GAME'\r\nexport const initialState = {\r\n    gameState: [],\r\n    numbers : [1,2,3,4,5],\r\n    status: 'PENDING',\r\n    level : 5,\r\n    previousLevel: 4\r\n}\r\n\r\nconst GameContext = createContext<{\r\n    state: gameStateType;\r\n    dispatch: React.Dispatch<any>;\r\n}>({\r\n    state: initialState,\r\n    dispatch: () => null,\r\n});\r\n\r\nconst gameReducer = (state: gameStateType, action: actionType) => {\r\n    switch (action.type) {\r\n        case START :{\r\n            const result = generateRandom(state)\r\n            return {\r\n                ...state,\r\n                gameState :[ ...state.gameState, (result[0] as number)],\r\n                numbers: [...state.numbers.slice(0, result[1]), ...state.numbers.slice(result[1] + 1)],\r\n                status: 'PENDING'\r\n            };\r\n        }\r\n        case RESET : {\r\n            return  {\r\n                ...state,\r\n                gameState: [],\r\n                numbers: numberState(state.level)\r\n            };\r\n        }\r\n        case CHECK : {\r\n            const guess = action.payload.guess.split(\",\")\r\n            const result = compareAnswer(state, guess)\r\n            if(result === 'WIN'){\r\n                return {\r\n                    ...state,\r\n                    status: result,\r\n                    previousLevel: state.previousLevel+1\r\n                }\r\n            }\r\n            else  {\r\n                return {\r\n                    ...state,\r\n                    status: result\r\n                }\r\n            }\r\n\r\n        }\r\n        case NEXT_LEVEL : {\r\n\r\n            const newState = {\r\n                ...state,\r\n                level: state.level + 1,\r\n                numbers: numberState(state.level+1)\r\n            }\r\n            storeLevel(newState.level)\r\n\r\n            return newState;\r\n        }\r\n        case SET_LEVEL : {\r\n            const level = action.payload.level\r\n\r\n            return {\r\n                ...state,\r\n                level: level,\r\n                numbers: numberState(level)\r\n            };\r\n        }\r\n        case NEW_GAME : {\r\n            storeLevel(4);\r\n            return  {\r\n                gameState: [],\r\n                numbers : [1,2,3,4,5],\r\n                status: 'PENDING',\r\n                level : 5,\r\n                previousLevel: 4\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n\r\n};\r\n\r\ntype Props = {\r\n    children: ReactNode;\r\n};\r\nconst GameProvider: React.FC<Props> = ({ children }) => {\r\n    const [state, dispatch] = useReducer(gameReducer, initialState);\r\n\r\n    return (\r\n        <GameContext.Provider value={{ state, dispatch }}>\r\n            {children}\r\n        </GameContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useGameContext = () => useContext(GameContext);\r\nexport { GameProvider };\r\n\r\n","import styled from \"styled-components\";\r\ntype SliceProps = {\r\n    value : number;\r\n}\r\n\r\nexport const Circle = styled.ul`\r\n  position: relative;\r\n  border: 1px solid black;\r\n  padding: 0;\r\n  margin: 1em auto;\r\n  width: 20em;\r\n  height: 20em;\r\n  border-radius: 50%;\r\n  list-style: none;\r\n  overflow: hidden;\r\n  \r\n`;\r\n\r\nexport const ButtonWrapper = styled.div`\r\n    margin-left: 43%;\r\n`\r\n\r\nexport const InputWrapper = styled.div`\r\n    margin-left: 25%;\r\n    margin-right: 25%;\r\n    margin-bottom: 10px;\r\n    \r\n`\r\nexport const SliceWrapper = styled.li<SliceProps>`\r\n  overflow: hidden;\r\n  position: absolute;\r\n  top: 0; right: 0;\r\n  width: 50%; height: 50%;\r\n  transform-origin: 0% 100%;\r\n  \r\n  &:nth-child(1) {\r\n    -webkit-transform: rotate(0deg) skewY(-60deg);\r\n    -ms-transform: rotate(0deg) skewY(-60deg);\r\n    transform: rotate(0deg) skewY(-60deg);\r\n    background: ${(props) => (props.value == 1 ? \"#ff6666\" : \"\")};\r\n  }\r\n  \r\n    &:nth-child(2) {\r\n      -webkit-transform: rotate(30deg) skewY(-60deg);\r\n      -ms-transform: rotate(30deg) skewY(-60deg);\r\n      transform: rotate(30deg) skewY(-60deg);\r\n      background: ${(props) => (props.value == 2 ? \"#ff8c66\" : \"\")};\r\n    }\r\n    &:nth-child(3) {\r\n      -webkit-transform: rotate(60deg) skewY(-60deg);\r\n      -ms-transform: rotate(60deg) skewY(-60deg);\r\n      transform: rotate(60deg) skewY(-60deg);\r\n      background: ${(props) => (props.value == 3 ? \"#8cff66\" : \"\")};\r\n    \r\n    }\r\n    &:nth-child(4) {\r\n      -webkit-transform: rotate(90deg) skewY(-60deg);\r\n      -ms-transform: rotate(90deg) skewY(-60deg);\r\n      transform: rotate(90deg) skewY(-60deg);\r\n      background: ${(props) => (props.value == 4 ? \"#66ffd9\" : \"\")};\r\n    \r\n    }\r\n    &:nth-child(5) {\r\n      -webkit-transform: rotate(120deg) skewY(-60deg);\r\n      -ms-transform: rotate(120deg) skewY(-60deg);\r\n      transform: rotate(120deg) skewY(-60deg);\r\n      background: ${(props) => (props.value == 5 ? \"#6666ff\" : \"\")};\r\n    \r\n    }\r\n    &:nth-child(6) {\r\n      -webkit-transform: rotate(150deg) skewY(-60deg);\r\n      -ms-transform: rotate(150deg) skewY(-60deg);\r\n      transform: rotate(150deg) skewY(-60deg);\r\n      background: ${(props) => (props.value == 6 ? \"#d966ff\" : \"\")};\r\n    \r\n    }\r\n    &:nth-child(7) {\r\n      -webkit-transform: rotate(180deg) skewY(-60deg);\r\n      -ms-transform: rotate(180deg) skewY(-60deg);\r\n      transform: rotate(180deg) skewY(-60deg);\r\n      background: ${(props) => (props.value == 7 ? \"#ff6666\" : \"\")};\r\n    \r\n    }\r\n    &:nth-child(8) {\r\n      -webkit-transform: rotate(210deg) skewY(-60deg);\r\n      -ms-transform: rotate(210deg) skewY(-60deg);\r\n      transform: rotate(210deg) skewY(-60deg);\r\n      background: ${(props) => (props.value == 8 ? \"#80ffd4\" : \"\")};\r\n    \r\n    }\r\n    &:nth-child(9) {\r\n      -webkit-transform: rotate(240deg) skewY(-60deg);\r\n      -ms-transform: rotate(240deg) skewY(-60deg);\r\n      transform: rotate(240deg) skewY(-60deg);\r\n      background: ${(props) => (props.value == 9 ? \"#ff6600\" : \"\")};\r\n    \r\n    }\r\n    &:nth-child(10) {\r\n      -webkit-transform: rotate(270deg) skewY(-60deg);\r\n      -ms-transform: rotate(270deg) skewY(-60deg);\r\n      transform: rotate(270deg) skewY(-60deg);\r\n      background: ${(props) => (props.value == 10 ? \"#e68a00\" : \"\")};\r\n    \r\n    }\r\n    &:nth-child(11) {\r\n      -webkit-transform: rotate(300deg) skewY(-60deg);\r\n      -ms-transform: rotate(300deg) skewY(-60deg);\r\n      transform: rotate(300deg) skewY(-60deg);\r\n      background: ${(props) => (props.value == 11 ? \"#e68a00\" : \"\")};\r\n    \r\n    }\r\n    &:nth-child(12) {\r\n      -webkit-transform: rotate(330deg) skewY(-60deg);\r\n      -ms-transform: rotate(330deg) skewY(-60deg);\r\n      transform: rotate(330deg) skewY(-60deg);\r\n      background: ${(props) => (props.value == 12 ? \"#5c8a8a\" : \"\")};\r\n    \r\n    }\r\n  \r\n  .text {\r\n  position: absolute;\r\n  left: -100%;\r\n  width: 200%; height: 200%;\r\n  text-align: center;\r\n  -webkit-transform: skewY(60deg) rotate(15deg);\r\n  -ms-transform: skewY(60deg) rotate(15deg);\r\n  transform: skewY(60deg) rotate(15deg);\r\n  padding-top: 20px;\r\n  \r\n  \r\n}\r\n`","import React from \"react\";\r\n\r\n\r\ntype buttonProps = {\r\n    icon?: string ;\r\n    text?: string ;\r\n    color?: string ;\r\n    disabled?: boolean;\r\n    callback?: (e: React.MouseEvent<HTMLButtonElement>) => void;\r\n};\r\n\r\nexport const Button: React.FC<buttonProps> = ({icon, text, color ,disabled ,callback,}) => {\r\n    const styles = {\r\n        background: color,\r\n        width: '25%',\r\n    }\r\n    return (\r\n        <button\r\n            disabled={disabled}\r\n            style={styles}\r\n            onClick={callback}\r\n            className=\"btn btn-light btn-outline mb-1 mt-1\"\r\n        >\r\n            {icon && <i className={icon + \" mr-1\"}/>}\r\n            {text && <span>{text}</span>}\r\n        </button>\r\n    );\r\n};\r\n","import { PageHeader } from 'antd';\r\n\r\nimport React from 'react';\r\ntype StatusProps = {\r\n    status: string\r\n}\r\nconst StatusBanner: React.FC<StatusProps> = ({status}) => {\r\n    return (\r\n        <PageHeader\r\n            title=\"Result\"\r\n            subTitle= {`YOU ` + status}\r\n        />\r\n    );\r\n}\r\n\r\nexport default StatusBanner;","import React from 'react';\r\ntype props = {\r\n    value: number\r\n}\r\nconst Slice: React.FC<props> = ({value})  => {\r\n    return (\r\n        <div className=\"text\">{value}</div>\r\n    );\r\n}\r\n\r\nexport default Slice;","import React, {useCallback, useEffect, useMemo, useState} from 'react';\r\nimport {useGameContext} from \"../context/gameContext\";\r\nimport {ButtonWrapper, Circle, InputWrapper, SliceWrapper} from \"../styles\";\r\nimport {Button} from \"../components/Button\";\r\nimport StatusBanner from \"../components/StatusBanner\";\r\nimport Slice from \"../components/Slice\";\r\nimport {Input} from \"antd\";\r\n\r\nconst Home = () => {\r\n    const {state, dispatch} = useGameContext();\r\n    const [stateValue, setStateValue] = useState({guess: ''})\r\n    console.log(state.level)\r\n\r\n    useEffect(()=>{\r\n        if(localStorage.getItem('level')){\r\n            dispatch({type: 'SET_LEVEL', payload : {level: localStorage.getItem('level')}})\r\n        }\r\n    },[])\r\n    const handleChange = useCallback((e:React.ChangeEvent<HTMLInputElement>)=> {\r\n        const value = e.target.value;\r\n        setStateValue({\r\n            ...stateValue,\r\n            [e.target.name]: value\r\n        });\r\n    }, [stateValue])\r\n\r\n    const checkAnswer = useCallback(()=> {\r\n        dispatch({type: 'CHECK', payload: {guess: stateValue.guess}})\r\n        dispatch({type: 'RESET'})\r\n        setStateValue({guess: ''});\r\n    }, [stateValue])\r\n\r\n    const handleNextLevel = useCallback(()=> {\r\n        dispatch({type: 'NEXT_LEVEL'})\r\n    }, [state.level])\r\n\r\n    const handleReset = useCallback(()=> {\r\n        dispatch({type: 'RESET'})\r\n    },[true])\r\n\r\n\r\n    const handleStart = useCallback(() => {\r\n        for (let i=1 ; i<= state.level; i ++) {\r\n            setTimeout(function() {\r\n                dispatch({type: 'START'})\r\n            },  i*1000*0.95)\r\n\r\n        }\r\n    }, [state.level])\r\n\r\n    const handleNewGame = useCallback(() => {\r\n        dispatch({type: 'NEW_GAME'})\r\n    },[])\r\n    const Buttons = useMemo(()=> {\r\n        return (\r\n            <ButtonWrapper>\r\n                {state.gameState.length === state.level ?\r\n                    (<Button callback={handleReset} text='RESET' color='#fc5603'/>) :\r\n                    (<Button callback={handleStart} text='START' color='#5acba1'/>)}\r\n            </ButtonWrapper>\r\n        )\r\n    },[state.gameState, state.level])\r\n\r\n    const inputFields = useMemo(() => {\r\n        return (\r\n                <InputWrapper>\r\n                    <label htmlFor=\"guess\"><h6>Guess</h6></label>\r\n                    <Input placeholder=\"Enter your guess numbers seperated by commas\" name=\"guess\" onChange={handleChange}/>\r\n                </InputWrapper>\r\n        )\r\n    }, [stateValue.guess])\r\n\r\n    const checkButton = useMemo(()=> {\r\n        return <ButtonWrapper>\r\n            <Button callback={checkAnswer} text='CHECK' color='#5acba1'/>\r\n        </ButtonWrapper>\r\n    }, [stateValue])\r\n\r\n    const nextButton = useMemo(()=> {\r\n        return (\r\n            <ButtonWrapper>\r\n                {state.previousLevel === state.level  && state.level <13 &&\r\n                    (<Button callback={handleNextLevel} text='NEXT LEVEL' color='#fcba03'/>)}\r\n            </ButtonWrapper>\r\n        )\r\n    }, [state.previousLevel, state.level])\r\n\r\n    const newGame = useMemo(()=> {\r\n        return (\r\n            <ButtonWrapper>\r\n                <Button text='NEW GAME' color='#fcba03' callback={handleNewGame}/>\r\n            </ButtonWrapper>\r\n        )\r\n    },[true])\r\n\r\n    let circleSlices =[];\r\n\r\n    for (let i =1 ; i<= state.level; i++){\r\n       circleSlices.push(\r\n           <SliceWrapper key={i} value={state.gameState[state.gameState.length-1]}>\r\n               <Slice value={i} ></Slice>\r\n           </SliceWrapper>\r\n       )\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={\"container\"}>\r\n\r\n            {state.status !== 'PENDING' ? (<StatusBanner status={state.status}/>) : (\"\")}\r\n\r\n            <Circle>\r\n                {circleSlices}\r\n            </Circle>\r\n            {Buttons}\r\n            {inputFields}\r\n            {checkButton}\r\n            {nextButton}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\nimport 'antd/dist/antd.css';\nimport Home from \"./Pages/Home\";\nconst App = () => {\n    return (\n        <Home/>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {GameProvider} from \"./context/gameContext\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <GameProvider>\n          <App />\n      </GameProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}